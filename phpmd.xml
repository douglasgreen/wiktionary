<?xml version="1.0" ?>
<ruleset
    name="Custom Ruleset"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
>

    <!--
    All rules have to be listed to be applied. They are customized or omitted by
    commenting out.
    -->

    <!--
    This rule is not useful. Booleans are often simple on/off switches not
    different responsibilities.
    <rule ref="rulesets/cleancode.xml/BooleanArgumentFlag" />
    -->

    <rule ref="rulesets/cleancode.xml/DuplicatedArrayKey" />

    <!--
    This rule is not useful and makes code more complicated.
    <rule ref="rulesets/cleancode.xml/ElseExpression" />
    -->

    <rule ref="rulesets/cleancode.xml/ErrorControlOperator" />

    <rule ref="rulesets/cleancode.xml/IfStatementAssignment" />

    <!-- Mark globals like \PDO rather than importing them -->
    <rule ref="rulesets/cleancode.xml/MissingImport">
        <properties>
            <property name="ignore-global" value="true" />
        </properties>
    </rule>

    <rule ref="rulesets/cleancode.xml/StaticAccess" />

    <rule ref="rulesets/cleancode.xml/UndefinedVariable" />

    <!-- The default value was 10, which is too restrictive -->
    <rule ref="rulesets/codesize.xml/CyclomaticComplexity">
        <properties>
            <property name="reportLevel" value="20" />
        </properties>
    </rule>

    <rule ref="rulesets/codesize.xml/ExcessiveClassComplexity" />

    <rule ref="rulesets/codesize.xml/ExcessiveClassLength" />

    <rule ref="rulesets/codesize.xml/ExcessiveMethodLength" />

    <rule ref="rulesets/codesize.xml/ExcessiveParameterList" />

    <rule ref="rulesets/codesize.xml/ExcessivePublicCount" />

    <rule ref="rulesets/codesize.xml/NPathComplexity" />

    <rule ref="rulesets/codesize.xml/TooManyFields" />

    <rule ref="rulesets/codesize.xml/TooManyMethods" />

    <rule ref="rulesets/codesize.xml/TooManyPublicMethods" />

    <rule ref="rulesets/controversial.xml/CamelCaseClassName" />

    <rule ref="rulesets/controversial.xml/CamelCaseMethodName" />

    <rule ref="rulesets/controversial.xml/CamelCaseParameterName" />

    <rule ref="rulesets/controversial.xml/CamelCasePropertyName" />

    <rule ref="rulesets/controversial.xml/CamelCaseVariableName" />

    <rule ref="rulesets/controversial.xml/Superglobals" />

    <rule ref="rulesets/design.xml/CountInLoopExpression" />

    <rule ref="rulesets/design.xml/CouplingBetweenObjects" />

    <rule ref="rulesets/design.xml/DepthOfInheritance" />

    <rule ref="rulesets/design.xml/DevelopmentCodeFragment" />

    <rule ref="rulesets/design.xml/EmptyCatchBlock" />

    <rule ref="rulesets/design.xml/EvalExpression" />

    <rule ref="rulesets/design.xml/ExitExpression" />

    <rule ref="rulesets/design.xml/GotoStatement" />

    <rule ref="rulesets/design.xml/NumberOfChildren" />

    <rule ref="rulesets/naming.xml/BooleanGetMethodName" />

    <rule ref="rulesets/naming.xml/ConstantNamingConventions" />

    <rule ref="rulesets/naming.xml/ConstructorWithNameAsEnclosingClass" />

    <rule ref="rulesets/naming.xml/LongClassName" />

    <rule ref="rulesets/naming.xml/LongVariable" />

    <rule ref="rulesets/naming.xml/ShortClassName" />

    <rule ref="rulesets/naming.xml/ShortMethodName" />

    <rule ref="rulesets/naming.xml/ShortVariable" />

    <rule ref="rulesets/unusedcode.xml/UnusedFormalParameter" />

    <rule ref="rulesets/unusedcode.xml/UnusedLocalVariable" />

    <rule ref="rulesets/unusedcode.xml/UnusedPrivateField" />

    <rule ref="rulesets/unusedcode.xml/UnusedPrivateMethod" />
</ruleset>
